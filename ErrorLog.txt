----------2018/11/15 15:24:27----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/11/15 15:24:28----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/11/26 15:31:56----------
System.ServiceModel.CommunicationObjectAbortedException: 无法将通信对象 System.ServiceModel.Channels.ServiceChannel 用于通信，因为它已经被中止。

Server stack trace: 
   在 System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen()
   在 System.ServiceModel.Channels.ServiceChannel.EnsureOpened(TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterService.GetUserName2SF()
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/3 8:45:52----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/3 10:11:50----------
System.ServiceModel.CommunicationObjectAbortedException: 无法将通信对象 System.ServiceModel.Channels.ServiceChannel 用于通信，因为它已经被中止。

Server stack trace: 
   在 System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen()
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterService.GetUserName2SF()
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/3 16:30:58----------
System.InvalidOperationException: 尝试对参数 http://tempuri.org/ 进行反序列化时出错: GetDataTableFromSQLResult。有关详细信息，请参见 InnerException。 ---> System.InvalidOperationException: DataTable 不支持来自 Xml 的架构推断。
   在 System.Data.DataTable.ReadXml(XmlReader reader, XmlReadMode mode, Boolean denyResolving)
   在 System.Data.DataTable.ReadXmlSerializable(XmlReader reader)
   在 System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadIXmlSerializable(XmlSerializableReader xmlSerializableReader, XmlReaderDelegator xmlReader, XmlDataContract xmlDataContract, Boolean isMemberType)
   在 System.Runtime.Serialization.XmlDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   在 System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlDictionaryReader reader, Boolean verifyObjectName)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.PartInfo.ReadObject(XmlDictionaryReader reader, XmlObjectSerializer serializer)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   --- 内部异常堆栈跟踪的结尾 ---

Server stack trace: 
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameter(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeBody(XmlDictionaryReader reader, MessageVersion version, String action, MessageDescription messageDescription, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeBodyContents(Message message, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeReply(Message message, Object[] parameters)
   在 System.ServiceModel.Dispatcher.ProxyOperationRuntime.AfterReply(ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.HandleReply(ProxyOperationRuntime operation, ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterDatabaseService.GetDataTableFromSQL(String strSQL)
   在 GWServiceAPI.Net.LibClass.ServerLib.GetDataTableSQL(String sql)
-------------------------------------

----------2018/12/4 9:08:53----------
System.InvalidOperationException: 尝试对参数 http://tempuri.org/ 进行反序列化时出错: GetDataTableFromSQLResult。有关详细信息，请参见 InnerException。 ---> System.InvalidOperationException: DataTable 不支持来自 Xml 的架构推断。
   在 System.Data.DataTable.ReadXml(XmlReader reader, XmlReadMode mode, Boolean denyResolving)
   在 System.Data.DataTable.ReadXmlSerializable(XmlReader reader)
   在 System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadIXmlSerializable(XmlSerializableReader xmlSerializableReader, XmlReaderDelegator xmlReader, XmlDataContract xmlDataContract, Boolean isMemberType)
   在 System.Runtime.Serialization.XmlDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   在 System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlDictionaryReader reader, Boolean verifyObjectName)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.PartInfo.ReadObject(XmlDictionaryReader reader, XmlObjectSerializer serializer)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   --- 内部异常堆栈跟踪的结尾 ---

Server stack trace: 
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameter(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeBody(XmlDictionaryReader reader, MessageVersion version, String action, MessageDescription messageDescription, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeBodyContents(Message message, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeReply(Message message, Object[] parameters)
   在 System.ServiceModel.Dispatcher.ProxyOperationRuntime.AfterReply(ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.HandleReply(ProxyOperationRuntime operation, ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterDatabaseService.GetDataTableFromSQL(String strSQL)
   在 GWServiceAPI.Net.LibClass.ServerLib.GetDataTableSQL(String sql)
-------------------------------------

----------2018/12/4 9:14:42----------
System.InvalidOperationException: 尝试对参数 http://tempuri.org/ 进行反序列化时出错: GetDataTableFromSQLResult。有关详细信息，请参见 InnerException。 ---> System.InvalidOperationException: DataTable 不支持来自 Xml 的架构推断。
   在 System.Data.DataTable.ReadXml(XmlReader reader, XmlReadMode mode, Boolean denyResolving)
   在 System.Data.DataTable.ReadXmlSerializable(XmlReader reader)
   在 System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadIXmlSerializable(XmlSerializableReader xmlSerializableReader, XmlReaderDelegator xmlReader, XmlDataContract xmlDataContract, Boolean isMemberType)
   在 System.Runtime.Serialization.XmlDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   在 System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlDictionaryReader reader, Boolean verifyObjectName)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.PartInfo.ReadObject(XmlDictionaryReader reader, XmlObjectSerializer serializer)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   --- 内部异常堆栈跟踪的结尾 ---

Server stack trace: 
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameter(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeBody(XmlDictionaryReader reader, MessageVersion version, String action, MessageDescription messageDescription, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeBodyContents(Message message, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeReply(Message message, Object[] parameters)
   在 System.ServiceModel.Dispatcher.ProxyOperationRuntime.AfterReply(ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.HandleReply(ProxyOperationRuntime operation, ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterDatabaseService.GetDataTableFromSQL(String strSQL)
   在 GWServiceAPI.Net.LibClass.ServerLib.GetDataTableSQL(String sql)
-------------------------------------

----------2018/12/4 9:15:12----------
System.InvalidOperationException: 尝试对参数 http://tempuri.org/ 进行反序列化时出错: GetDataTableFromSQLResult。有关详细信息，请参见 InnerException。 ---> System.InvalidOperationException: DataTable 不支持来自 Xml 的架构推断。
   在 System.Data.DataTable.ReadXml(XmlReader reader, XmlReadMode mode, Boolean denyResolving)
   在 System.Data.DataTable.ReadXmlSerializable(XmlReader reader)
   在 System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadIXmlSerializable(XmlSerializableReader xmlSerializableReader, XmlReaderDelegator xmlReader, XmlDataContract xmlDataContract, Boolean isMemberType)
   在 System.Runtime.Serialization.XmlDataContract.ReadXmlValue(XmlReaderDelegator xmlReader, XmlObjectSerializerReadContext context)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.ReadDataContractValue(DataContract dataContract, XmlReaderDelegator reader)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator reader, String name, String ns, Type declaredType, DataContract& dataContract)
   在 System.Runtime.Serialization.XmlObjectSerializerReadContext.InternalDeserialize(XmlReaderDelegator xmlReader, Type declaredType, DataContract dataContract, String name, String ns)
   在 System.Runtime.Serialization.DataContractSerializer.InternalReadObject(XmlReaderDelegator xmlReader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.XmlObjectSerializer.ReadObjectHandleExceptions(XmlReaderDelegator reader, Boolean verifyObjectName, DataContractResolver dataContractResolver)
   在 System.Runtime.Serialization.DataContractSerializer.ReadObject(XmlDictionaryReader reader, Boolean verifyObjectName)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.PartInfo.ReadObject(XmlDictionaryReader reader, XmlObjectSerializer serializer)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   --- 内部异常堆栈跟踪的结尾 ---

Server stack trace: 
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameterPart(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeParameter(XmlDictionaryReader reader, PartInfo part, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.DataContractSerializerOperationFormatter.DeserializeBody(XmlDictionaryReader reader, MessageVersion version, String action, MessageDescription messageDescription, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeBodyContents(Message message, Object[] parameters, Boolean isRequest)
   在 System.ServiceModel.Dispatcher.OperationFormatter.DeserializeReply(Message message, Object[] parameters)
   在 System.ServiceModel.Dispatcher.ProxyOperationRuntime.AfterReply(ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.HandleReply(ProxyOperationRuntime operation, ProxyRpc& rpc)
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterDatabaseService.GetDataTableFromSQL(String strSQL)
   在 GWServiceAPI.Net.LibClass.ServerLib.GetDataTableSQL(String sql)
-------------------------------------

----------2018/12/6 13:14:11----------
System.ServiceModel.CommunicationObjectAbortedException: 无法将通信对象 System.ServiceModel.Channels.ServiceChannel 用于通信，因为它已经被中止。

Server stack trace: 
   在 System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen()
   在 System.ServiceModel.Channels.ServiceChannel.Call(String action, Boolean oneway, ProxyOperationRuntime operation, Object[] ins, Object[] outs, TimeSpan timeout)
   在 System.ServiceModel.Channels.ServiceChannelProxy.InvokeService(IMethodCallMessage methodCall, ProxyOperationRuntime operation)
   在 System.ServiceModel.Channels.ServiceChannelProxy.Invoke(IMessage message)

Exception rethrown at [0]: 
   在 System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   在 System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)
   在 AlarmCenterWcfServiceLibrary.IAlarmCenterService.GetUserName2SF()
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/6 18:46:13----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/6 18:46:19----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 9:21:35----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 9:21:37----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 9:22:10----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 9:28:45----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 9:30:18----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:30:09----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:30:26----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:30:52----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:30:52----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:30:52----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:31:06----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

----------2018/12/10 17:33:00----------
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 AlarmCenter.DataCenter.DataCenter.RunProxy(String csIP, String Name, String PWD, ClientType CT, Boolean bLogin)
   在 GWServiceAPI.Net.LibClass.Methods.RunProxy(String ip, String Name, String pwd)
   在 GWServiceAPI.Net.LibClass.ServerLib.ConnectService(String user_name)
-------------------------------------

